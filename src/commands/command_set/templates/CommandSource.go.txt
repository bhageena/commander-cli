package main

/*
@description Run the user command
@param {ParamsType} params list of command parameters
@param {?string} commandText text message
@param {!object} [secrets = {}] list of secrets
@return {Promise<SlackBodyType>} Response body
*/

func _command(
	params map[string]interface{},
	commandText string,
	secrets map[string]interface{}) map[string]interface{} {

	// DESTRUCTURED_ARGS := params[key];

	msg := make(map[string]interface{})
	msg["response_type"] = "in_channel"
	msg["text"] = "This is a default response for a newly created command with text: " + commandText
	return msg
}

/**
 * @typedef {object} SlackBodyType
 * @property {string} text
 * @property {'in_channel'|'ephemeral'} [response_type]
 */

func Main(args map[string]interface{}) map[string]interface{} {
	secrets, _ := args["__secrets"].(map[string]interface{})
	params, _ := args["params"].(map[string]interface{})
	commandText, _ := args["commandText"].(string)

	response := make(map[string]interface{})
	response["body"] = _command(params, commandText, secrets)
	return response
}
